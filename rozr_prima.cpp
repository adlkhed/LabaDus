#include <iostream>

using namespace std;

int main() {

    int tree [11][11] {
            {0,4,3,2,0,0,0,0,0,0,0},
            {0,0,0,0,2,0,1,0,0,0,0},
            {0,0,0,0,6,7,0,0,0,0,0},
            {0,0,0,0,0,2,4,0,0,0,0},
            {0,2,6,0,0,0,0,7,5,0,0},
            {0,0,7,2,0,0,0,4,0,3,0},
            {0,1,0,4,0,0,0,0,4,5,0},
            {0,0,0,0,7,4,0,0,0,0,7},
            {0,0,0,0,5,0,4,0,0,0,1},
            {0,0,0,0,0,3,5,0,0,0,3},
            {0,0,0,0,0,0,0,7,1,3,0},
    };
    // записую матрицю інцидентності

    int min(100), min_e, min_x, count(1);
    int edges[11];
    edges[0] = 0;

    cout << 1 << endl;

    do {

        for(int i = 0; i < count; i++) {
            for (int x = 0; x < 11; x++) {
                if (tree[edges[i]][x] != 0 && tree[edges[i]][x] < min) {
                    min = tree[edges[i]][x];
                    min_e = x;
                    min_x = edges[i];
                }
            }
        }
        //знаходжу мінімальне ребро серед вершин, які відкриті

        edges[count] = min_e;
        // додаю до масиву наступну вершину

        count++;
        min = 10;

        for (int a = 0; a < 11; a++) {
            tree[a][min_e] = 0;
        }
        // занулюю стовбчик ребер з відкритою вершиною

        cout << min_x+1 << "-->" << min_e+1 << "\t(" << min_e + 1 << ")" << endl;

    }while (count < 11);
}
